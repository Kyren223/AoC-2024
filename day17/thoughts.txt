Program: 2,4,1,5,7,5,1,6,4,1,5,5,0,3,3,0

ASM:
0 bst a
1 bxl 5
2 cdv b
3 bxl 6
5 bxc
6 out b
7 adv 3
8 jnz 0

HUMAN:
b = a % 8
b = b ^ 5 # 0b101
c = a / 2^b
b = b ^ 6 # 0b110
print b
a = a / 8
halt if a = 0

SIMPLIFIED:
b = a % 8 # 3 LSB
b = b ^ 3 # 0b011
print b
a = a / 8 # a >> 3
halt if a = 0

2,4,1,5,7,5,1,6,4,1,5,5,0,3,3,0
010,100,001,101,111,101,001,110,010,001,101,101,000,011,011,000

AFTER MASK
001,111,010,110,100,110,010,101,001,010,110,110,011,000,000,011

AFTER REVERSING (bcz it outputs LSB not MSB)
0b011_000_000_011_110_110_010_001_101_010_110_100_110_010_111_001
0b011000000011110110010001101010110100110010111001
105817553194169

Ok tried it, that's wrong apparently
I probably need to make it not divisible by 0, so add +1
But first verifying it

a = 0b011000000011110110010001101010110100110010111001
001 -> 010 -> print
a = 0b011000000011110110010001101010110100110010111
111 -> 100 -> print

Found the mistake, I let GPT check if I did any conversions errors and it wrote
a script (could've just used the VM from part 1) and the output:
[2, 4, 1, 5, 7, 5, 1, 6, 2, 1, 5, 5, 0, 3, 3, 0]
I have a 2 instead of a 4^<- here

2,4,1,5,7,5,1,6,4,1,5,5,0,3,3,0
010,100,001,101,111,101,001,110,100,001,101,101,000,011,011,000 fixed

AFTER MASK
001,111,010,110,100,110,010,101,011,010,110,110,011,000,000,011

AFTER REVERSING (bcz it outputs LSB not MSB)
0b011_000_000_011_110_110_010_011_101_010_110_100_110_010_111_001
0b011000000011110110010011101010110100110010111001
Decimal: 105817586748601

Still wrong, hmm
And I did it again, it's now 0 instead of 4 lol

0b011_000_000_011_110_110_010_111_101_010_110_100_110_010_111_001
0b011000000011110110010111101010110100110010111001
Decimal: 105817653857465

Still wrong, output is correct this time tho
I should try running it on the VM and see what it gives

Btw got to: 174058000000 before stopping
CMP:     105817653857465 - only 3 digits off to being remotely close lol
Yea brute force wouldn't have worked

[2 4 1 5 7 5 1 6 4 1 5 5 0 3 3 0]
[1 1 3 1 5 7 2 3 1 6 3 6 0 5 3 0]
I get this, so smthing in my simplification is probably wrong
Oh wait I totally ignored C and bxc, whoops

ASM:
0 bst a
1 bxl 5
2 cdv b
3 bxl 6
5 bxc
6 out b
7 adv 3
8 jnz 0

HUMAN:
b = a % 8
b = b ^ 5 # 0b101
c = a / 2^b
b = b ^ 6 # 0b110
b = b ^ c
print b
a = a / 8
halt if a = 0

2,4,1,5,7,5,1,6,4,1,5,5,0,3,3,0
010,100,001,101,111,101,001,110,100,001,101,101,000,011,011,000

We need to rerverse the operations
b = (b^5^6) ^ (a/2^(b^5))

b^5 0b101
111,001,100,000,010,000,100,011,001,100,000,000,101,110,110,101

b = (b^6) ^ (a/2^(b))

==============================================
==============================================
2^b
7,1,4,0,2,,0,4,3,1,4,0,0,5,6,6,5
d=128,2,16,1,4,1,16,8,2,16,1,1,32,64,32

b^6 0b110
001,111,010,110,100,110,010,101,111,010,110,110,011,000,000,011
==============================================
==============================================

b = b ^ (a/d)

765432107654321076543210765432107654321076543210
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

a/d = 0 for the last one
b = 011 ^ 000 = 011

765432107654321076543210765432107654321076543210
011XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

0 to 63 / 64 is also always 0
b = 000 ^ 000 = 000

765432107654321076543210765432107654321076543210
011000XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

b = 000 ^ (011000XXX/6) = 011

765432107654321076543210765432107654321076543210
011000011XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

b = 011 ^ (011000011XXX/5) = 011 ^ 000 = 011

765432107654321076543210765432107654321076543210
011000011011XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

b = 110 ^ (011000011011XXX/0)

Wait I did it wrong

2,4,1,5,7,5,1,6,4,1,5,5,0,3,3,0
010,100,001,101,111,101,001,110,100,001,101,101,000,011,011,000

We need to rerverse the operations
out = (b^5^6) ^ (a/2^(b^5))
out = b^011 ^ a>>(b^101)

000 = b^011 ^ 000>>(b^101) = b^011 ^ 000
b = 011

765432107654321076543210765432107654321076543210
011XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

011 = b^011 ^ 011XXX>>(b^101)

765432107654321076543210765432107654321076543210
011XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
